<html>
<body>
<script src="/js/jquery-1.12.4.js"></script>
  	<script src="/js/jquery-ui.js"></script>
  	<script src="/js/general.js"></script>
  	<script>
  	function updateScoreBreakdown(obj){
  		document.getElementById("blueAutoScore").innerHTML = obj.blue.autoPoints;
  		document.getElementById("blueJewelPoints").innerHTML = obj.blue.jewelPoints;
  		document.getElementById("blueAutoGlyphPoints").innerHTML = obj.blue.glyphAutoPoints;
  		document.getElementById("blueKeyPoints").innerHTML = obj.blue.keyPoints;
  		document.getElementById("blueParkingPoints").innerHTML = obj.blue.parkingPoints;
  		document.getElementById("blueTeleopScore").innerHTML = obj.blue.teleopPoints;
  		document.getElementById("blueGlyphPoints").innerHTML = obj.blue.glyphPoints;
  		document.getElementById("blueRowPoints").innerHTML = obj.blue.rowPoints;
  		document.getElementById("blueColumnPoints").innerHTML = obj.blue.columnPoints;
  		document.getElementById("blueCipherPoints").innerHTML = obj.blue.cipherPoints;
  		document.getElementById("blueRelicPoints").innerHTML = obj.blue.relicPoints;
  		document.getElementById("blueBalancePoints").innerHTML = obj.blue.balancePoints;
  		document.getElementById("blueFoulScore").innerHTML = obj.blue.foulPoints;
  	}
  	
  	function getScoreUpdate(){
  		$.ajax({
  			url: "../scorebreakdown/",
  			type: "GET",
  			dataType: 'json',
  			success: function(data){
  				updateScoreBreakdown(data);
  				window.setTimeout(getScoreUpdate, 1000);
  			},
  			error: function(){
  			}});
  	}
  	
  	function updateScheduleTab(schedule){
  		var sched = document.getElementById("ScheduleTab");
  		for(var i = 0; i < schedule.length; i++){
  			var m = i + 1;
  			console.log(schedule[i]);
  			var match = schedule[i];
  			var entry = document.getElementById("match"+m);
  			if(entry == null){
  				entry = document.createElement("div");
  				entry.id = "match"+m;
  				entry.className = "scheduleEntry";
  				entry.setAttribute("onclick", "loadMatch(this)");
  				sched.appendChild(entry);
  			} else{
  				while (entry.firstChild) {
				  entry.removeChild(entry.firstChild);
				}
  			}
			var cell = document.createElement("div");
			cell.className= "scheduleMatch";
			cell.id = "match"+m+"match";
			cell.innerHTML = match.match;
			entry.appendChild(cell);
			
			cell = document.createElement("div");
			cell.className = "scheduleStatus";
			cell.id = "match"+m+"status";
			cell.innerHTML = match.status;
			entry.appendChild(cell);
			
			cell = document.createElement("div");
			cell.className = "scheduleTeam";
			cell.id = "match"+m+"redScore";
			cell.innerHTML = match.redScore;
			entry.appendChild(cell);
			
			for(var n = 1; n < 3; n++){ 
				cell = document.createElement("div");
				cell.className = "scheduleTeam";
  				cell.id = "match"+m+"red"+m;
  				cell.innerHTML = match["red"+n];
  				entry.appendChild(cell);  				
			}
			for(var n = 1; n < 3; n++){ 
				cell = document.createElement("div");
				cell.className = "scheduleTeam";
  				cell.id = "match"+m+"blue"+m;
  				cell.innerHTML = match["blue"+n];
  				entry.appendChild(cell);  				
			}
			
			cell = document.createElement("div");
			cell.className = "scheduleTeam";
			cell.id = "match"+m+"blueScore";
			cell.innerHTML = match.blueScore;
			entry.appendChild(cell);
  			
  		}
  	}
  	
  	function loadMatch(src){
  		//send load match request
  		//get match reload match info from server 
  		$.ajax({
  			url: "../match/load/"+src.id.substring(5)+'/',
  			type: "POST",
  			success: function(data){
  				getCurrentMatchData();
  			},
  			error:function(xhr, ajaxOptions, thrownError){
  				
	                    console.log(xhr);
	                    console.log(ajaxOptions);
	                    console.log(thrownError);
  			}});
  		
  		
  	}
  	function fillMatchInfo(data){
  	
  	//TODO clear the cards and DQ box
  		var slot = document.getElementById("red1Slot");
  		slot.getElementsByClassName("teamNumber")[0].value = data.red1;
  		
  		slot = document.getElementById("red2Slot");
  		slot.getElementsByClassName("teamNumber")[0].value = data.red2;
  		
  		
  		slot = document.getElementById("blue1Slot");
  		slot.getElementsByClassName("teamNumber")[0].value = data.blue1;
  		
  		slot = document.getElementById("blue2Slot");
  		slot.getElementsByClassName("teamNumber")[0].value = data.blue2;
  		
  		
  	}
  	
  	//Get the teams, 
  	function getCurrentMatchData(){
  		$.ajax({
  			url: "../match/",
  			type: "GET",
  			dataType: 'json',
  			success: function(data){
  				fillMatchInfo(data);
  			},
  			error:function(xhr, ajaxOptions, thrownError){
  				
	                    console.log(xhr);
	                    console.log(ajaxOptions);
	                    console.log(thrownError);
  			}});
  	}
  	
  	function getScheduleStatus(){
  		$.ajax({
  			url: "../schedule/status/",
  			type: "GET",
  			dataType: 'json',
  			success: function(data){
  				updateScheduleTab(data);
  			},
  			error: function(){
  			}});
  	}
  	
  	$().ready(function(){getScheduleStatus();getScoreUpdate();});
  	
  	</script>
<style>
	body { margin:0; }
	#top{
		width:100%;
		height:20%;
		background:magenta;
	}
	#menuBar{
		width:100%;
		height:5%;
		background:yellow;
	}
	#matchControl{
		width:100%;
		height: 10%;
		background:orange;
		display: flex;
		align-items: center;
		justify-content: center;
	}
	#tabBar{
		width:100%;
		height:5%;
		background:green;
		display: flex;
		align-items: center;
		justify-content: left;
	}
	.tabContent{
		width:100%;
		height:60%;
		display: none;
		overflow:auto;
	}
	#leftScores{
		width:50%;
		height:100%;
		background:red;
		float:left;
	}
	#rightScores{
		width:50%;
		height:100%;
		background:blue;
		float:left;
	}
	.teamSlotHeader{
		width:100%;
		height:10%;
		background:purple;
	}
	.teamSlot{
		width:100%;
		height:30%;
		background:red;
		display: flex;
		align-items: center;
	}
	#leftTeams{
		width:40%;
		height:100%;
		background:pink;
		float:left;
	}
	#rightTeams{
		width:40%;
		height:100%;
		background:cyan;
		float:left;
	}
	#centerTop{
		width:20%;
		height:100%;
		background:white;
		float:left;
	}
	.matchControlButton{
		background-color: #4CAF50; /* Green */
		border: none;
		color: white;
		padding: 12px 20px;
		text-align: center;
		text-decoration: none;
		display: inline-block;
		font-size: 16px;
		margin: 4px 10px;
		cursor: pointer;
	}
	.matchControlButton:hover {
		background-color: #3e8e41;
	}
	.matchControlButton:disabled{
		background-color: #d3d3d3;
	}
	.matchControlButton[state="back"]{
		background-color: yellow;
	}
	.matchControlButton[state="warn"]{
		background-color: red;
	}
	.tabButton{
		background-color: #4CAF50; /* Green */
		border: none;
		color: white;
		padding: 2px 6px;
		text-align: center;
		text-decoration: none;
		display: inline-block;
		font-size: 16px;
		margin: 4px 10px;
		cursor: pointer;
	}
	
	.tabButton:hover {
		background-color: #3e8e41;
	}
	.dqBox{
		margin: 10px 10px;
	}
	.teamNumber{
		width:70px;
	}
	.teamCard{
		background-color: #4CAF50; /* Green */
		border: none;
		color: black;
		padding: 1px 1px;
		text-align: center;
		text-decoration: none;
		display: inline-block;
		font-size: 16px;
		margin: 1px 10px;
		cursor: pointer;
		border-radius: 3px;
	}
	.teamCard[value="yellow"]{
		background-color: yellow;
	}
	.teamCard[value="red"]{
		background-color:red;
	}
	.scoreBreakdown{
		float:left;
		
	}
	
	
	.scheduleEntry{
		height: 20px;
		background:blue;
	}
	.scheduleEntry:hover{
		cursor:pointer;
		background:#4040FF
	}
	.scheduleDescription{
		width: 200px;
		height : 100%;
		float:left;
	}
	.scheduleStatus{
		text-align:center;
		width: 150px;
		height : 100%;
		float:left;
	}
	.scheduleMatch{
		width: 60px;
		height : 100%;
		float:left;
		text-align:center;
	}
	.scheduleTeam{
		width:75px;
		height : 100%;
		float:left;
		text-align:center;
	}
	
	
	</style>

<script>

function toggleCard(src){
	if(src.value == "green"){
		src.value = "yellow";
	} else if(src.value== "yellow"){
		src.value = "red";
	} else{
		src.value = "green";
	}
}

function randomize(){
	var postObj = {};
	$.post("../randomize/",postObj).done(function(data){
		console.log(data);
		//TODO listen for randomization by head ref
		//after button click, HR has option to rerandomize until match starts
		//once match starts, HR has info and stuff. And can enter cards.
		
		
		var rand = document.getElementById("randomBtn");
		rand.setAttribute("state", "warn");
		rand.innerHTML = "Re-Randomize";
		var showRand = document.getElementById("showBtn");
		showRand.disabled = false;
		showRand.setAttribute("state", "ready");
		var startBtn = document.getElementById("startBtn");
		startBtn.disabled = false;
		startBtn.setAttribute("state","ready");
		
	}).fail( function(xhr, textStatus, errorThrown) {
        console.log(textStatus);
    });
}

function showRandom(){
	
}

function start(){
	var postObj = {};
	$.post("../time/start/",postObj).done(function(data){
		console.log(data);
		//TODO listen for randomization by scorekeeper
		//after button click, HR has option to rerandomize until match starts
		//once match starts, HR has info and stuff. And can enter cards.
		var preview = document.getElementById("previewBtn");
		preview.setAttribute("state", "off");
		preview.disabled = true;
		var rand = document.getElementById("randomBtn");
		rand.setAttribute("state", "off");
		rand.disabled = true;
		var showRand = document.getElementById("showBtn");
		showRand.disabled = true;
		showRand.setAttribute("state", "off");
		var startBtn = document.getElementById("startBtn");
		startBtn.setAttribute("state","warn");
		startBtn.innerHTML = "Abort Match";
		
		
	}).fail( function(xhr, textStatus, errorThrown) {
        console.log(textStatus);
    });
}

function commit(){
	var postObj = {};
	$.post("../score/commit/",postObj).done(function(data){
		console.log(data);
		//TODO listen for randomization by scorekeeper
		//after button click, HR has option to rerandomize until match starts
		//once match starts, HR has info and stuff. And can enter cards.
	}).fail( function(xhr, textStatus, errorThrown) {
        console.log(textStatus);
    });
}

function openTab(event, tabName){
	tabcontent = document.getElementsByClassName("tabContent");
	for (i = 0; i < tabcontent.length; i++) {
        tabcontent[i].style.display = "none";
    }
    document.getElementById(tabName).style.display = "block";
}

</script>
		<div id="menuBar"></div>
		<div id="top">
			<div id="leftTeams">
				<div class="teamSlotHeader" style="text-align:right">DQ</div>
				<div class="teamSlot" id="red1Slot" style="justify-content: flex-end;">
					<button class="teamCard" onclick="toggleCard(this)">Card</button>
					<input type="text" class="teamNumber"/>
					<input type="checkbox" class="dqBox"/>
				</div>
				<div class="teamSlot" id="red2Slot" style="justify-content: flex-end;">
					<button class="teamCard" onclick="toggleCard(this)">Card</button>
					<input type="text" class="teamNumber"/>
					<input type="checkbox" class="dqBox"/>
				</div>
				<div class="teamSlot" id="red3Slot" style="justify-content: flex-end;">
					<button class="teamCard" onclick="toggleCard(this)">Card</button>
					<input type="text" class="teamNumber"/>
					<input type="checkbox" class="dqBox"/>
				</div>
			</div>
			<div id="centerTop"></div>
			<div id="rightTeams">
				<div class="teamSlotHeader">DQ</div>
				<div class="teamSlot" id="blue1Slot">
					<input type="checkbox" class="dqBox"/>
					<input type="text" class="teamNumber"/>
					<button class="teamCard" onclick="toggleCard(this)">Card</button>
				</div>
				<div class="teamSlot" id="blue2Slot">
					<input type="checkbox" class="dqBox"/>
					<input type="text" class="teamNumber"/>
					<button class="teamCard" onclick="toggleCard(this)">Card</button>
				</div>
				<div class="teamSlot" id="blue3Slot">
					<input type="checkbox" class="dqBox"/>
					<input type="text" class="teamNumber"/>
					<button class="teamCard" onclick="toggleCard(this)">Card</button>
				</div>
			</div>
		</div>
		<div id="matchControl">
			<button class="matchControlButton" id="previewBtn"onclick="showPreview()"state="ready">Match Preview</button>
			<button class="matchControlButton" id="randomBtn" onclick="randomize()"  state = "ready">Randomize</button>			
			<button class="matchControlButton" id="showBtn"   onclick="showRandom()" state = "off" disabled>Show Randomization</button>
			<button class="matchControlButton" id="startBtn"  onclick="start()"      state = "off" disabled>Start Match</button>
			<button class="matchControlButton" id="commitBtn" onclick="commit()"     state = "off" disabled>Commit Scores</button>
			<button class="matchControlButton" id="postBtn"   onclick="post()"       state = "off" disabled>Post Results</button>
			
		</div>
		<!-- TODO https://www.w3schools.com/howto/howto_js_tabs.asp -->
		<div id="tabBar">
			<button class="tabButton" onclick="openTab(event, 'ScheduleTab')">Schedule</button>
			<button class="tabButton" onclick="openTab(event, 'ScoreTab')">Scores</button>
			<button class="tabButton" onclick="openTab(event, 'SettingsTab')">Settings</button>
		</div>
		<div class="tabContent" id="ScoreTab">
			<div id="leftScores"></div>
			<div id="rightScores">
			<div class="scoreBreakdown">
			<fieldset>
			<legend>Score Breakdown</legend>
				<table >
					<tr><th>Auto</th><th id="blueAutoScore">0</th></tr>					
					<tr><td>Jewel Points</td><td id="blueJewelPoints">0</td></tr>
					<tr><td>Glyph Points</td><td id="blueAutoGlyphPoints">0</td></tr>
					<tr><td>Key Bonus</td><td id="blueKeyPoints">0</td></tr>
					<tr><td>Parking Points</td><td id="blueParkingPoints">0</td></tr>
					<tr><th>Teleop</th><th id="blueTeleopScore">0</th></tr>
					<tr><td>Glyph Points</td><td id="blueGlyphPoints">0</td></tr>
					<tr><td>Row Bonus</td><td id="blueRowPoints">0</td></tr>
					<tr><td>Column Bonus</td><td id="blueColumnPoints">0</td></tr>
					<tr><td>Cipher Bonus</td><td id="blueCipherPoints">0</td></tr>
					<tr><td>Relic Points</td><td id="blueRelicPoints">0</td></tr>
					<tr><td>Balance Points</td><td id="blueBalancePoints">0</td></tr>
					<tr><th>Foul</th><th id="blueFoulScore">0</th></tr>
				</table>
				</fieldset>
			</div>
			</div>
		</div>
		<div class="tabContent" id="ScheduleTab">
			<div class="scheduleEntry">
				<div class="scheduleMatch">Match</div>
				<div class="scheduleStatus">Status</div>
				<div class="scheduleTeam">Red Score</div>
				<div class="scheduleTeam">Red 1</div>
				<div class="scheduleTeam">Red 2</div>
				<div class="scheduleTeam">Blue 1</div>
				<div class="scheduleTeam">Blue 2</div>
				<div class="scheduleTeam">Blue Score</div>				
			</div>
			
		</div>
		<div class="tabContent" id="SettingsTab">
		</div>
	</body>
</html>